; example of processes and parameters to define pipelines
[LOAD_INPUT_TEXT_CSV]
; colnames for input data (just in case of colnames change)
new_colnames=None 
; input csv with text data
file_input=None
; boolean to indicate if input file has header
has_header=True
; csv fields separator
sep=';'
; csv encoding
encoding='utf-8'
; boolean to select only complete rows in csv
has_complete_rows=True
; columns to apply text cleaning
cols_to_clean=None
; text language
language='en'
; get text in low-case
lcase=True
; punctuation to clean in input texts (from input csv)
lst_punct_to_del=['\.', ',', '\(', '\)', ':', ';', '\?', '!', '"', '`']
; get tokenized text after cleaning
tokenized_text=False
; verbose: show tokens before and after cleaning
logging_tokens_cleaning=False
; insert id columns in csv data
insert_id_column=False
; name for iserted column (if before argument equal to TRUE)
inserted_id_column_name='id'
; pickle file to save output (csv readed and cleaned)
file_save_pickle=None

[GET_EMBEDDINGS_AS_DF]
verbose=False
df_input=None
column_to_computing=None
columns_to_save=[]
root_name_vect_cols='dim_'
dim_embeddings=768
path_embeddings_model=None
type_model='BERT'
python_pkg='bert-embeddings'
file_save_pickle=None